justUseful python package.

1. For improving speed of runtime.
Numba, cython(needs complilation), pypy

2. pandas alternative.
dask(good for parallel, memory too)
cudf(GPU pandas)
polars(using rust)
pandaral-lel(parallel process pandas, not memory efficient)
Modin(could be the best of all with pandas, store memory in disk.)
calamine (reading excel file)
Vaex (for big data)
fireducks(faster, not the memory, can use pandas code)

5. Automate machine learning. ***mlxtend can also do feature engineering.
mlxtend, PyCaret, AutoML H2O, 
fastai(deeplearning)

8. Categorical data for clustering. Kmodes method.
from kmodes.kmodes import KModes

9. duckDB for creating local DB.

10. Extracting tables from pdf file.
pymupdf, tabula

11. Manipulate pandas dataframe with AI.
sketch

12. Timeseries data analysis.
tslearn(clustering & anormaly detection), 
tssearch(find seasonal patterns), 
tsfresh(Automatic feature engineering), 
Kats(Facebook, similar to Pycaret but includes prohet & deeplearning), 
lag llama(pre-trained)
AutoGluon(Amazon, similar to Pycaret)
Prophet(introduced by Facebook), Neural prophet
DMD(dimensionality reduction)
MLforecast(ensemble with classical models)
TimeFM, xLSTM,   N-beats, NHITS, PatchTST, TSMixer, SOFTS, LagLlama (neuralforecast, darts library includes Nbeats)
Liquid neural network(see repo)
xLSTM, TimeFM.  (New timeseries model by Google)
"from statsmodels.tsa.seasonal import seasonal_decompose" to get info.
Use Fourier transform to remove noise.
Use Wavelet(similar to fourier transform) to convert input features to freq domain, then use it as input features.
DeepAR(LSTM or GRU automatic parameter tuning model)
Neural ODE with LSTM.(see repo)
5 useful libraries: Nixtla, Darts, skTime, statsforecast(classical)

13. Dimensionality reduction.
UMAP, PaCMAP, TSNE, EncodeDecoder(see my code dimension_reduction_EncodeDecoder.py)
https://medium.com/@evertongomede/a-comparative-analysis-of-dimensionality-reduction-techniques-in-machine-learning-3389c5103348

14. Memory profiler.
https://pypi.org/project/memory-profiler/(If installing from conda, open /env/Lib/site-packages/memory_profiler.py, moddify as below)
(10) from asyncio import isocoroutinefunction #coroutine 
(1203) with open(filename, encoding="utf-8") as f:
LineProfiler (line by line that shows slowest part of code)
cProfile (show statistics on function execution time)

15. Minimize function with constraints
https://machinelearningmastery.com/lagrange-multiplier-approach-with-inequality-constraints/
https://www.khanacademy.org/math/multivariable-calculus/applications-of-multivariable-derivatives/constrained-optimization/a/lagrange-multipliers-single-constraint
Scipy differential_evolution

16. New decision tree machine learning technique introduced by Microsoft.
DiCE

18. Feature selection 
AutoFeatSelect
ITMO_FS (new library, use neural network)

19. Feature importance similar to shap.
lime

20. TabNet
https://qiita.com/matsuda_tkm/items/8a752534d671fb4e477a
https://pypi.org/project/pytorch-tabnet/
https://qiita.com/maskot1977/items/5de6605806f8918d2283

22. MCMC regression to include uncertainty in timeseries prediction curve in plot.
https://medium.com/@abdallahashraf90x/oversampling-for-better-machine-learning-with-imbalanced-data-68f9b5ac2696
Gaussian process
Bayesian deep learning(pyro)

23. Finetune with ORPO, new technique.
https://huggingface.co/blog/mlabonne/orpo-llama-3

24. t-test(two continuous data that are different or not)
chi-squared test(two categorical data that are different or not)(one binary data that are different from expected ratio(50:50) or not)
Anova test(three continuous data that are different or not)

24. statistical test.
Mann-Kendall test: Find upward/downward trend.
Anderson-Darling test: Check if the data follow normal gaussian distribution.
Dickey-Fuller Test: Test if the timeseries data is stationary or not.

25. Pydantic
Allows you to setup datafame with custom default.

27. Mamba, the new neural network that is better than transformer.
    Mamba, package installer that is faster than anaconda.  
    uv is also faster than pip.

27. Feature transformation for training supervised model.
yeo-transformation
signature transformation (use fourier transform)
If using log() that has negative values, apply min_max scaler, then apply log().

28. Find frequent itemset association rules. Use mlxtend library.
https://rstudio-pubs-static.s3.amazonaws.com/282387_0cc72775dbc7433b800fe669a49cf77d.html

29. Causal effect.
tigramite library.

30. Automate web browsing with python.
Selenium
parcel 

31. fix format in VScode.
black
ruff

32. decorator to minimize memory.
lru_cashe

33. Visualization.
Basic: matplotlib, Seaborn, Altair

34. NLP purging, classification, that can integrate with tensorflow, pytorch.
spacy
textblob (it can give text polarity)

35. Let you access and surf webpage using python.
helium

36. Feature engineering (create columns with x1+x2, x1-x2, ...)
featuretools

37. Extract texts from image.t
eacyocr, Doctr, Keras-OCR, GOCR, Tesseract, 

38. Create pdf, word, documents.
sphinx, mkdocs, 

39. Manipulate Excel.
pyexcel

40. Get information on timeseries data.
from statsmodels.tsa.seasonal import seasonal_decompose

41. Reduce dimension in linear regression.
Eliminate features with VIF, then check adjusted R2 doesn't change much.  Repeat until VIF are all less than 5.
Eliminate features with high p value and check adjusted R2 increase. (backward elimination)

42. Create document.
sphinx

43. Anaconda archive package.
https://repo.anaconda.com/archive/

44. Poetry alternative.
uv

45. Anormaly detection.
Pyod
ADTK
Auto-encoder(see my code anomaly_detection_autoEncoder.py)
Isolation tree from scikit learn, and use shap values. (see my code anomaly_detection_isolation_forest.py)
model.fit()
explainer = shap.Explainer(model.decision_function, features)
shap_val = explainer(features.iloc[sample])

46. Fix encoding error & Mojibake.
ftfy

47. Use deque() if python list is too big, and need to use append() pop() a lot.

48. save webpage in pdf.
pdfkit

49. Alternative to Pearson correlation.
Chaterjee correlation

50. LLM with web scraping, crawling.
crawl4ai  https://ai.gopubby.com/feed-knowlege-of-any-website-to-llm-in-seconds-c19bd69a1718

52. Create powerpoint.
python-pptx

Interactive: Plotly, Bokeh,
Map: Folium, Cartopy
Web Dashboard: Dash
Flowchart: PyGraphviz
Table: AG_Grid


